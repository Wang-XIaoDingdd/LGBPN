
model:
  type: BSN
  kwargs:
    pd_a: 5
    pd_b: 2
    pd_pad: 2
    R3: True
    R3_T: 8
    R3_p: 0.16

    bsn: My_BSN

    in_ch: 3
    bsn_base_ch: 128
    bsn_num_module: 9

model_input: [noisy] # e.g.) real_noisy, syn_noisy, clean

trainer: Trainer

training:
  dataset: prep_DND

  dataset_args:
    add_noise: None # e.g.) None bypass uni-15. gau-15. gau_blind-10.:50. het_gau-10.:50. see more detail in denoise_dataset.py
    crop_size: [120, 120]
    aug: ['hflip', 'rot']
    n_repeat: 4
#    n_data: 8


  batch_size: 8
#  batch_size: 1

  max_epoch: 20

  init_lr: 1e-4
  scheduler:
    type: step
    step:
      step_size: 8
      gamma: 0.1
  loss: 1*self_L1
  tmp_info: []
  optimizer:
    type: Adam
    Adam:
      betas: [0.9, 0.999]

  warmup: False
  warmup_iter: 200

validation:
  dataset: prep_DND

  dataset_args:
    crop_size: None # [64, 64]
    add_noise: None # e.g.) None uni-15. gau-15. gau_blind-10.:50. poi_gau-10.:50.
    n_data: 64

  add_con: 0.5
  floor: True

  val: True
  save_image: True

  start_epoch: 8
  interval_epoch: 4

checkpoint:
  save: True
  start_epoch: 1
  interval_epoch: 1

log:
  interval_iter: 10

test:
  dataset: DND_benchmark

  dataset_args:
    crop_size: None # [64, 64]
    add_noise: None # e.g.) None uni-15. gau-15. gau_blind-10.:50. poi_gau-10.:50.

  add_con: 0.0
  floor: False

  save_image: True
